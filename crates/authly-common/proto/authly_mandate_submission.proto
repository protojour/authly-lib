syntax = "proto3";
package authly_mandate_submission;

// Authly Mandate Submission protocol.
//
// It is serviced through a Secure (not MutuallySecure) Authly Connection tunnel.
service AuthlyMandateSubmission {
    rpc Submit (SubmissionRequest) returns (SubmissionResponse);
}

// Submission request from Mandate to Authority.
message SubmissionRequest {
    // Submission token.
    string token = 1;

    // A DER encoded certificate signing request for the mandate's identity.
    bytes identity_csr_der = 2;
}

// Response from Authority to Mandate after submission.
message SubmissionResponse {
    // The Entity ID assigned to the mandate.
    bytes mandate_entity_id = 1;

    // The certificate chain.
    // The mandate's own freshly signed certificate is the first in the chain.
    repeated AuthlyCertificate cert_chain = 2;
}

// An Authly Certificate
message AuthlyCertificate {
    // Which entity ID this is certifying
    bytes certifies_entity_id = 1;

    // Which entity ID signed the certificate
    bytes signed_by_entity_id = 2;

    // The DER encoded contents of the certificate
    bytes der = 3;
}
